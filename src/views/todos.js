// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['jquery', 'underscore', 'backbone', 'text!templates/todos.html', 'common', 'contracts-js'], function($, _, Backbone, todosTemplate, Common, C) {
    var TodoView, _ref;
    return TodoView = (function(_super) {
      __extends(TodoView, _super);

      function TodoView() {
        _ref = TodoView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      TodoView.prototype.tagName = 'li';

      TodoView.prototype.template = _.template(todosTemplate);

      TodoView.prototype.events = {
        'click .toggle': 'toggleCompleted',
        'dblclick label': 'edit',
        'click .destroy': 'clear',
        'keypress .edit': 'updateOnEnter',
        'blur .edit': 'close'
      };

      TodoView.prototype.initialize = function() {
        this.listenTo(this.model, 'change', this.render);
        this.listenTo(this.model, 'destroy', this.remove);
        return this.listenTo(this.model, 'visible', this.toggleVisible);
      };

      TodoView.prototype.render = function() {
        this.$el.html(this.template(this.model.toJSON()));
        this.$el.toggleClass('completed', this.model.get('completed'));
        this.toggleVisible();
        this.$input = this.$('.edit');
        return this;
      };

      TodoView.prototype.toggleVisible = function() {
        return this.$el.toggleClass('hidden', this.isHidden());
      };

      TodoView.prototype.isHidden = function() {
        var isCompleted;
        isCompleted = this.model.get('completed');
        return (!isCompleted && Common.TodoFilter === 'completed') || (isCompleted && Common.TodoFilter === 'active');
      };

      TodoView.prototype.toggleCompleted = function() {
        return this.model.toggle();
      };

      TodoView.prototype.edit = function() {
        this.$el.addClass('editing');
        return this.$input.focus();
      };

      TodoView.prototype.close = function() {
        var value;
        value = this.$input.val().trim();
        if (value) {
          return this.model.save({
            title: value
          });
        } else {
          this.clear();
          return this.$el.removeClass('editing');
        }
      };

      TodoView.prototype.updateOnEnter = function(e) {
        if (e.keyCode === Common.ENTER_KEY) {
          return this.close();
        }
      };

      TodoView.prototype.clear = function() {
        return this.model.destroy();
      };

      return TodoView;

    })(Backbone.View);
  });

}).call(this);
