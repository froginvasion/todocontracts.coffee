// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'jquery', 'backbone', 'collections/list', 'models/item', 'views/itemview'], function(_, $, Backbone, List, Item, ItemView) {
    var ListView, _ref;
    ListView = (function(_super) {
      __extends(ListView, _super);

      function ListView() {
        _ref = ListView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      ListView.prototype.el = $('body');

      ListView.prototype.initialize = function() {
        _.bindAll(this);
        this.counter = 0;
        this.collection = new List();
        this.collection.bind('add', this.appendItem);
        return this.render();
      };

      ListView.prototype.render = function() {
        $(this.el).append("<button>Add list item:</button>");
        return $(this.el).append("<ul></ul>");
      };

      ListView.prototype.addItem = function() {
        var item;
        this.counter++;
        item = new Item();
        item.set('part2', "" + (item.get('part2')) + " " + this.counter);
        return this.collection.add(item);
      };

      ListView.prototype.appendItem = function(item) {
        var item_view;
        item_view = new ItemView({
          model: item
        });
        return $('ul').append(item_view.render().el);
      };

      ListView.prototype.events = {
        'click button': 'addItem'
      };

      return ListView;

    })(Backbone.View);
    return ListView;
  });

}).call(this);
